DROP TABLE IF EXISTS BOOKS_AUD;
DROP TABLE IF EXISTS READERS_AUD;
DROP TRIGGER IF EXISTS READERS_INSERT;
DROP TRIGGER IF EXISTS READERS_DELETE;
DROP TRIGGER IF EXISTS READERS_UPDATE;
DROP TRIGGER IF EXISTS BOOKS_INSERT;
DROP TRIGGER IF EXISTS BOOKS_DELETE;
DROP TRIGGER IF EXISTS BOOKS_UPDATE;

CREATE TABLE BOOKS_AUD
(
    EVENT_ID       INT(11)  NOT NULL AUTO_INCREMENT,
    EVENT_DATE     DATETIME NOT NULL,
    EVENT_TYPE     VARCHAR(10) DEFAULT NULL,
    OLD_BOOK_ID    INT(11),
    NEW_BOOK_ID    INT(11),
    OLD_TITLE      VARCHAR(255),
    NEW_TITLE      VARCHAR(255),
    OLD_PUB_YEAR   INT(4),
    NEW_PUB_YEAR   INT(4),
    OLD_BESTSELLER BOOLEAN,
    NEW_BESTSELLER BOOLEAN,
    PRIMARY KEY (EVENT_ID)
);

CREATE TABLE READERS_AUD
(
    EVENT_ID      INT(11)  NOT NULL AUTO_INCREMENT,
    EVENT_DATE    DATETIME NOT NULL,
    EVENT_TYPE    VARCHAR(10) DEFAULT NULL,
    OLD_READER_ID INT(11),
    NEW_READER_ID INT(11),
    OLD_FIRSTNAME VARCHAR(255),
    NEW_FIRSTNAME VARCHAR(255),
    OLD_LASTNAME  VARCHAR(255),
    NEW_LASTNAME  VARCHAR(255),
    OLD_PESELID   VARCHAR(255),
    NEW_PESELID   VARCHAR(255),
    OLD_VIP_LEVEL VARCHAR(50),
    NEW_VIP_LEVEL VARCHAR(50),
    PRIMARY KEY (EVENT_ID)
);


DELIMITER $$

CREATE TRIGGER READERS_INSERT
    AFTER INSERT
    ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, NEW_READER_ID, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID,
                             NEW_VIP_LEVEL)
    VALUES (CURTIME(), 'INSERT', NEW.READER_ID, NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$

CREATE TRIGGER READERS_DELETE
    AFTER DELETE
    ON READERS
    FOR EACH ROW
begin
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, OLD_READER_ID)
    VALUES (CURTIME(), 'DELETE', OLD.READER_ID);
END $$

CREATE TRIGGER READERS_UPDATE
    AFTER UPDATE
    ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD (EVENT_DATE, EVENT_TYPE, OLD_READER_ID, NEW_READER_ID, OLD_FIRSTNAME, NEW_FIRSTNAME,
                             OLD_LASTNAME, NEW_LASTNAME, OLD_PESELID, NEW_PESELID, OLD_VIP_LEVEL, NEW_VIP_LEVEL)
    VALUES (CURTIME(), 'UPDATE', NEW.READER_ID, OLD.READER_ID, NEW.FIRSTNAME, OLD.FIRSTNAME, NEW.LASTNAME, OLD.LASTNAME,
            NEW_PESELID, OLD.PESELID, NEW.VIP_LEVEL, OLD.VIP_LEVEL);
END $$

CREATE TRIGGER BOOKS_INSERT
    AFTER INSERT
    ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, NEW_BOOK_ID, NEW_TITLE, NEW_PUB_YEAR, NEW_BESTSELLER)
    VALUES (CURTIME(), 'INSERT', NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
END $$

CREATE TRIGGER BOOKS_DELETE
    AFTER DELETE
    ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, OLD_BOOK_ID)
    VALUES (CURTIME(), 'DELETE', OLD.BOOK_ID);
END $$

CREATE TRIGGER BOOKS_UPDATE
    AFTER UPDATE
    ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD (EVENT_DATE, EVENT_TYPE, OLD_BOOK_ID, NEW_BOOK_ID, OLD_TITLE, NEW_TITLE, OLD_PUB_YEAR,
                           NEW_PUB_YEAR, OLD_BESTSELLER, NEW_BESTSELLER)
    VALUES (CURTIME(), 'UPDATE', NEW.BOOK_ID, OLD.BOOK_ID, NEW.TITLE, OLD.TITLE, NEW.PUBYEAR, OLD.PUBYEAR,
            NEW.BESTSELLER, OLD.BESTSELLER);
END $$

DELIMITER ;
